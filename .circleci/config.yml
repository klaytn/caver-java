version: 2

defaults: &defaults
  working_directory: ~/circleci-caver-java-major
  docker:
    - image: circleci/openjdk:8-jdk-browsers

machine_ubuntu: &machine_ubuntu
  working_directory: ~/circleci-caver-java-major
  machine:
    image: ubuntu-1604:201903-01

android_machine_ubuntu: &android_machine_ubuntu
  working_directory: ~/circleci-caver-java-android
  machine:
    image: ubuntu-1604:201903-01    

pull_klaytn_image: &pull_klaytn_image
  run:
    name: "Pull and tag Klaytn image"
    command: |
          docker pull kjhman21/dev:v1.0.0
          docker image tag kjhman21/dev:v1.0.0 klaytn

start_test_newwork: &start_test_newwork
  run:
    name: "Start test network"  
    working_directory: .circleci/images
    command: docker-compose up -d

build_test: &build_test
  run:
    name: "Build and test"
    command: |
        ./gradlew clean
        ./gradlew build --scan --debug

jobs:
  build:
    <<: *machine_ubuntu
    steps:
      - checkout
      - *pull_klaytn_image
      - *start_test_newwork
      - run:
          name: "Check rc version"
          command: |
            if [ -z "$CIRCLE_TAG" ]; then
              echo "this is not RC version"
            else
              sed -i "s/version '.*'/version '${CIRCLE_TAG:1}'/" build.gradle
              awk '/version '\''/' build.gradle
            fi
      - *build_test
      - persist_to_workspace:
          root: ~/
          paths: 
            - circleci-caver-java-major/*

  android_build:
    <<: *android_machine_ubuntu
    steps:
      - checkout
      - *pull_klaytn_image
      - *start_test_newwork
      - run:
          name: "Change to Android version"
          command: |
            version=$(.circleci/version.sh)
            sed -i "s/version '.*'/version '${version}-android'/" build.gradle 
            sed -i "s/ext.web3jVersion = '.*'/ext.web3jVersion = '$web3j_version-android'/" build.gradle 
            sed -i "s/java.util.concurrent.CompletableFuture/java8.util.concurrent.CompletableFuture/" core/src/test/java/com/klaytn/caver/scenario/FastTransactionManagerIT.java

            if [ -z "$CIRCLE_TAG" ]; then
              echo "this is not RC version"
            else
              echo "trigger CIRCLE_TAG $CIRCLE_TAG"
              sed -i "s/version '.*'/version '${CIRCLE_TAG:1}-android'/" build.gradle
              sed -i "s/ext.web3jVersion = '.*'/ext.web3jVersion = '$web3j_version-android'/" build.gradle
              sed -i "s/java.util.concurrent.CompletableFuture/java8.util.concurrent.CompletableFuture/" core/src/test/java/com/klaytn/caver/scenario/FastTransactionManagerIT.java
            fi

            awk '/version '\''/' build.gradle
            awk '/ext.web3jVersion = '\''/' build.gradle
      - *build_test
      - persist_to_workspace:
          root: ~/
          paths: 
            - circleci-caver-java-android/*

  tag_verify:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: "Verify tag and file verison match"
          command: |
            echo "tag version is " $CIRCLE_TAG

            file_version=v$(.circleci/version.sh)
            echo "file version is " $file_version

            if [ $file_version == ${CIRCLE_TAG%-*} ]; then
              echo "verification pass"
            else
              echo "It's not same version."
              exit 1
            fi

  release_PR:
    <<: *defaults
    steps:
      - add_ssh_keys
      - checkout
      - run:
          name: "Push to release branch"
          command: |
              echo "push to release branch: /release/${CIRCLE_TAG%-*}"
              git checkout -b release/${CIRCLE_TAG%-*}
              git push origin release/${CIRCLE_TAG%-*}
      - run:
          name: "Install hub" 
          command: |
              curl -sSLf https://github.com/github/hub/releases/download/v2.12.3/hub-linux-amd64-2.12.3.tgz | \
                tar zxf - --strip-components=1 -C /tmp && \
                sudo mv /tmp/bin/hub /usr/local/bin/hub
              type hub
      - run:
          name: "Create pull request" 
          command: |
              version=$(hub pr list -s open -L 10 -f "%H%n")
              echo $version

              if [[ $version == *"release/${CIRCLE_TAG%-*}"* ]]; then
                echo "PR already exist"
              else
                echo "hub pull-request -m "[Master] release/$CIRCLE_TAG QA Signoff" -b $CIRCLE_PROJECT_USERNAME:master -h $CIRCLE_PROJECT_USERNAME:${CIRCLE_TAG%-*}"
                hub pull-request -b $CIRCLE_PROJECT_USERNAME:master -h $CIRCLE_PROJECT_USERNAME:release/${CIRCLE_TAG%-*} -r $GITHUB_reviewer -l circleci -F- <<EOF
                [Master] release/${CIRCLE_TAG%-*} QA Sign-off

                This PR is automatically created by CI to release a new official version of $CIRCLE_PROJECT_REPONAME.

                When this PR is approved by QA team, a new version will be released.
              EOF
              fi

  major_tagging:
    <<: *defaults
    steps:
      - add_ssh_keys
      - checkout
      - run:
          name: "Generate tag"
          command: |
              current_version=$(.circleci/version.sh)

              echo "git tag v$current_version"
              git tag v$current_version
              git push origin v$current_version
      - run:
          name: "Delete release branch"
          command: |
              #delete release branch. it trigger by merge title
              version=v$(.circleci/version.sh)

              if [[ "release/v" = $(git log --oneline -1 | grep -o "release/v") ]]; then
                echo "Delete branch release/$version"
                git push origin --delete release/$version
              else
                echo "Need to delete branch manually"
              fi  

  major_publish:
    <<: *machine_ubuntu
    steps:
      # - attach_workspace:
      #     at: ~/
      - checkout
      - *pull_klaytn_image
      - *start_test_newwork
      - run:
          name: "Check rc version"
          command: |
            if [ -z "$CIRCLE_TAG" ]; then
              echo "this is not RC version"
            else
              sed -i "s/version '.*'/version '${CIRCLE_TAG:1}'/" build.gradle
              awk '/version '\''/' build.gradle
            fi
      - run:
          name: "Publish major version"
          command: |
              version=v$(.circleci/version.sh)

              echo "Publishing a major release! version=$version"
              ./gradlew release --stacktrace --debug
              #./gradlew bintrayUpload --stacktrace --debug


  android_publish:
    <<: *android_machine_ubuntu
    steps:
      - attach_workspace:
          at: ~/
      - checkout
      - *pull_klaytn_image
      - *start_test_newwork
      - run:
          name: "Publish android version"
          command: |
              version=$(.circleci/version.sh)
              sed -i "s/version '.*'/version '${version}-android'/" build.gradle
              sed -i "s/ext.web3jVersion = '.*'/ext.web3jVersion = '$web3j_version-android'/" build.gradle 
              sed -i "s/java.util.concurrent.CompletableFuture/java8.util.concurrent.CompletableFuture/" core/src/test/java/com/klaytn/caver/scenario/FastTransactionManagerIT.java

              if [ -z "$CIRCLE_TAG" ]; then
                echo "this is not RC version"
              else
                echo "trigger CIRCLE_TAG $CIRCLE_TAG"
                sed -i "s/version '.*'/version '${CIRCLE_TAG:1}-android'/" build.gradle
                sed -i "s/ext.web3jVersion = '.*'/ext.web3jVersion = '$web3j_version-android'/" build.gradle
                sed -i "s/java.util.concurrent.CompletableFuture/java8.util.concurrent.CompletableFuture/" core/src/test/java/com/klaytn/caver/scenario/FastTransactionManagerIT.java
              fi              

              version=v$(.circleci/version.sh)
              echo "Publishing a major android release! version=$version"
              ./gradlew release --stacktrace --debug
              #./gradlew bintrayUpload --stacktrace --debug

workflows:
  version: 2
  workflow_build_deploy:
    jobs:
    - build:
        filters:
          branches:
            ignore:
              - /release\/.*/
              - master
          # tags:
          #   only: /^v[0-9]+\.[0-9]+\.[0-9]+/
          #   only: /^v[0-9]+\.[0-9]+\.[0-9]+.*/

    - android_build:
        filters:
          branches:
            ignore:
              - /release\/.*/
              - master
          # tags:
          #   only: /^v[0-9]+\.[0-9]+\.[0-9]+/
          #   only: /^v[0-9]+\.[0-9]+\.[0-9]+.*/

    - tag_verify:
        filters:
          tags:
            only: /^v[0-9]+\.[0-9]+\.[0-9]+-rc.*/
          branches:
            ignore: /.*/

    - release_PR:
        requires:
          - major_publish
          - android_publish
        filters:
          tags:
            only: /^v[0-9]+\.[0-9]+\.[0-9]+-rc.*/
          branches:
            ignore: /.*/

    - major_tagging:
        filters:
          branches:
            only: master       
          
    - android_publish:
        # requires:
        #   - android_build
        filters:
          tags: 
            #only: /^v[0-9]+\.[0-9]+\.[0-9]+/
            only: /^v[0-9]+\.[0-9]+\.[0-9]+.*/
          branches:
            ignore: /.*/

    - major_publish:
        requires:
          # - build
          - android_publish
        filters:
          tags:
            #only: /^v[0-9]+\.[0-9]+\.[0-9]+/
            only: /^v[0-9]+\.[0-9]+\.[0-9]+.*/
          branches:
            ignore: /.*/
